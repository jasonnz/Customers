<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:objectstore="http://www.mulesoft.org/schema/mule/objectstore" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/objectstore http://www.mulesoft.org/schema/mule/objectstore/current/mule-objectstore.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <http:listener-config name="customersApi-httpListenerConfig" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <apikit:config name="customersApi-config" raml="customersApi.raml" consoleEnabled="false" doc:name="Router"/>
    <objectstore:config name="ObjectStore__Connector" partition="customerPartition"  doc:name="ObjectStore: Connector"/>
    <flow name="customersApi-main">
        <http:listener config-ref="customersApi-httpListenerConfig" path="/api/*" doc:name="HTTP"/>
        <apikit:router config-ref="customersApi-config" doc:name="APIkit Router"/>
        <exception-strategy ref="customersApi-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="customersApi-console">
        <http:listener config-ref="customersApi-httpListenerConfig" path="/console/*" doc:name="HTTP"/>
        <apikit:console config-ref="customersApi-config" doc:name="APIkit Console"/>
    </flow>
    <flow name="put:/customers/{customerid}:application/json:customersApi-config">
        <object-to-string-transformer doc:name="Object to String"/>
        <json:json-to-object-transformer returnClass="java.util.Map" doc:name="JSON to Object"/>
        <objectstore:retrieve-and-store config-ref="ObjectStore__Connector" key="#[message.inboundProperties.'http.uri.params'.customerid]" storeValue-ref="#[payload]" doc:name="ObjectStore"/>
        <set-payload value=" #[payload]" doc:name="Set Payload"/>
    </flow>
    <flow name="delete:/customers/{customerid}:customersApi-config">
        <objectstore:remove config-ref="ObjectStore__Connector" key="#[message.inboundProperties.'http.uri.params'.customerid]" doc:name="ObjectStore"/>
        <set-payload  doc:name="Set Payload" value="nothing"/>
    </flow>
    <flow name="get:/customers:customersApi-config">
        <objectstore:retrieve-all-keys config-ref="ObjectStore__Connector" doc:name="ObjectStore"/>
        <set-variable variableName="outputList" value="#[new java.util.ArrayList()]" doc:name="Variable"/>
        <foreach doc:name="For Each" collection="#[payload]">
            <objectstore:retrieve config-ref="ObjectStore__Connector" key="#[payload]" doc:name="ObjectStore"/>
            <expression-transformer expression="#[flowVars.outputList.add(payload)]" doc:name="Expression"/>
        </foreach>
        <set-payload value=" #[flowVars.outputList]" doc:name="Set Payload"/>

    </flow>
    <flow name="get:/customers/{customerid}:customersApi-config">
        <objectstore:retrieve config-ref="ObjectStore__Connector" key="#[message.inboundProperties.'http.uri.params'.customerid]" doc:name="ObjectStore"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
  "Id": payload.id,
  "First name:": payload.firstname,
  "Last name": payload.lastname,
  "Address": payload.address
}]]></dw:set-payload>
        </dw:transform-message>

        <set-payload value="#[payload]" doc:name="Set Payload"/>
    </flow>
    <flow name="post:/customers:application/json:customersApi-config">
        <object-to-string-transformer doc:name="Object to String"/>
        <json:json-to-object-transformer returnClass="java.util.Map" doc:name="JSON to Object"/>
        <objectstore:store config-ref="ObjectStore__Connector" key="#[payload.id]" value-ref="#[payload]" doc:name="ObjectStore"/>

        <set-payload value="#[payload]" doc:name="Set Payload"/>
    </flow>
    <apikit:mapping-exception-strategy name="customersApi-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
